#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication10
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QueryReports")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQuery(Query instance);
    partial void UpdateQuery(Query instance);
    partial void DeleteQuery(Query instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QueryReportsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Query> Queries
		{
			get
			{
				return this.GetTable<Query>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Query")]
	public partial class Query : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Guid;
		
		private int _id;
		
		private string _sql;
		
		private string _createdby;
		
		private System.DateTime _createdon;
		
		private bool _enabled;
		
		private string _catalog;
		
		private string _server;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGuidChanging(string value);
    partial void OnGuidChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsqlChanging(string value);
    partial void OnsqlChanged();
    partial void OncreatedbyChanging(string value);
    partial void OncreatedbyChanged();
    partial void OncreatedonChanging(System.DateTime value);
    partial void OncreatedonChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    partial void OncatalogChanging(string value);
    partial void OncatalogChanged();
    partial void OnserverChanging(string value);
    partial void OnserverChanged();
    #endregion
		
		public Query()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sql", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sql
		{
			get
			{
				return this._sql;
			}
			set
			{
				if ((this._sql != value))
				{
					this.OnsqlChanging(value);
					this.SendPropertyChanging();
					this._sql = value;
					this.SendPropertyChanged("sql");
					this.OnsqlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdby", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string createdby
		{
			get
			{
				return this._createdby;
			}
			set
			{
				if ((this._createdby != value))
				{
					this.OncreatedbyChanging(value);
					this.SendPropertyChanging();
					this._createdby = value;
					this.SendPropertyChanged("createdby");
					this.OncreatedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdon", DbType="DateTime NOT NULL")]
		public System.DateTime createdon
		{
			get
			{
				return this._createdon;
			}
			set
			{
				if ((this._createdon != value))
				{
					this.OncreatedonChanging(value);
					this.SendPropertyChanging();
					this._createdon = value;
					this.SendPropertyChanged("createdon");
					this.OncreatedonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catalog", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string catalog
		{
			get
			{
				return this._catalog;
			}
			set
			{
				if ((this._catalog != value))
				{
					this.OncatalogChanging(value);
					this.SendPropertyChanging();
					this._catalog = value;
					this.SendPropertyChanged("catalog");
					this.OncatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_server", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string server
		{
			get
			{
				return this._server;
			}
			set
			{
				if ((this._server != value))
				{
					this.OnserverChanging(value);
					this.SendPropertyChanging();
					this._server = value;
					this.SendPropertyChanged("server");
					this.OnserverChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
